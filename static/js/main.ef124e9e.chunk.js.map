{"version":3,"sources":["components/img/one.png","components/img/two.png","components/Card/Card.module.css","components/Card/Card.js","components/Diagram/Diagram.js","redux/type.js","redux/store.js","redux/reducer.js","redux/connect.js","components/MainPage/MainPage.js","redux/action.js","App.js","serviceWorker.js","index.js","components/MainPage/MainPage.module.css"],"names":["module","exports","Card","handle","url","counter","color","title","className","styles","avatar","img","src","alt","onClick","button","style","backgroundColor","Diagram","this","props","data","COLORS","width","height","margin","top","cx","cy","labelLine","outerRadius","innerRadius","dataKey","map","entry","index","key","fill","length","PureComponent","defaultProps","store","reducer","initialState","currentReducer","currentState","listener","getState","dispatch","action","subscribe","newListener","createStore","state","type","counterOne","counterTwo","mapStateToProps","mapDispatchToProps","connect","handleOne","handleTwo","Component","handleChange","forceUpdate","unsubscribe","React","total","name","value","mainPage","wrapper","imgOne","imgTwo","App","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.ef124e9e.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/one.507a0e33.png\";","module.exports = __webpack_public_path__ + \"static/media/two.9c6efd85.png\";","// extracted by mini-css-extract-plugin\nmodule.exports = {\"avatar\":\"Card_avatar__J_1JH\",\"img\":\"Card_img__3uKiN\",\"title\":\"Card_title__2t3FQ\",\"counter\":\"Card_counter__3Vu5H\",\"button\":\"Card_button__2YHzL\"};","import React from 'react';\r\nimport { func, number, string } from 'prop-types';\r\nimport styles from './Card.module.css';\r\n\r\nconst Card = ({ handle, url, counter, color, title }) => (\r\n  <div className={styles.avatar}>\r\n    <img className={styles.img} src={url} alt=\"img\" />\r\n    <div className={styles.title}>{title}</div>\r\n    <div className={styles.counter}>{counter}</div>\r\n    <button\r\n      onClick={handle}\r\n      className={styles.button}\r\n      style={{ backgroundColor: `${color}` }}\r\n    />\r\n  </div>\r\n);\r\n\r\nCard.propTypes = {\r\n  handle: func.isRequired,\r\n  counter: number.isRequired,\r\n  color: string.isRequired,\r\n  url: string,\r\n  title: string\r\n};\r\n\r\nexport default Card;\r\n","import React, { PureComponent } from 'react';\r\nimport { PieChart, Pie, Cell } from 'recharts';\r\nimport { shape, arrayOf, string } from 'prop-types';\r\n\r\nexport default class Diagram extends PureComponent {\r\n  static propTypes = {\r\n    data: arrayOf(shape({})),\r\n    COLORS: arrayOf(string)\r\n  };\r\n\r\n  static defaultProps = {\r\n    data: [{}, {}],\r\n    COLORS: ['blue', 'yellow']\r\n  };\r\n\r\n  render() {\r\n    const { data, COLORS } = this.props;\r\n    return (\r\n      <PieChart width={400} height={400} margin={{ top: 50 }}>\r\n        <Pie\r\n          data={data}\r\n          cx={200}\r\n          cy={150}\r\n          labelLine={false}\r\n          outerRadius={140}\r\n          innerRadius={100}\r\n          dataKey=\"value\"\r\n        >\r\n          {data.map((entry, index) => (\r\n            <Cell key={`cell-${index}`} fill={COLORS[index % COLORS.length]} />\r\n          ))}\r\n        </Pie>\r\n      </PieChart>\r\n    );\r\n  }\r\n}\r\n","export const ADD_COUNTER_ONE = 'ADD_COUNTER_ONE';\r\nexport const ADD_COUNTER_TWO = 'ADD_COUNTER_TWO';\r\n","import reducer from './reducer';\r\n\r\nfunction createStore(reducer, initialState) {\r\n  const currentReducer = reducer;\r\n  let currentState = initialState;\r\n  let listener = () => {};\r\n  return {\r\n    getState() {\r\n      return currentState;\r\n    },\r\n    dispatch(action) {\r\n      currentState = currentReducer(currentState, action);\r\n      listener();\r\n      return action;\r\n    },\r\n    subscribe(newListener) {\r\n      listener = newListener;\r\n    }\r\n  };\r\n}\r\n\r\nexport const store = createStore(reducer, { counterOne: 0, counterTwo: 0 });\r\n","import { ADD_COUNTER_ONE, ADD_COUNTER_TWO } from './type';\r\n\r\nconst reducer = (state, action) => {\r\n  switch (action.type) {\r\n    case ADD_COUNTER_ONE:\r\n      return {\r\n        ...state,\r\n        counterOne: state.counterOne + 1\r\n      };\r\n    case ADD_COUNTER_TWO:\r\n      return {\r\n        ...state,\r\n        counterTwo: state.counterTwo + 1\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport default reducer;\r\n","import React from 'react';\r\nimport { store } from './store';\r\n\r\nexport default function connect(mapStateToProps, mapDispatchToProps) {\r\n  return function(Component) {\r\n    return class extends React.Component {\r\n      componentDidMount() {\r\n        this.unsubscribe = store.subscribe(this.handleChange);\r\n      }\r\n\r\n      componentWillUnmount() {\r\n        this.unsubscribe();\r\n      }\r\n\r\n      handleChange = () => {\r\n        this.forceUpdate();\r\n      };\r\n\r\n      render() {\r\n        return (\r\n          <Component\r\n            {...this.props}\r\n            {...mapStateToProps(store.getState(), this.props)}\r\n            {...mapDispatchToProps(store.dispatch, this.props)}\r\n          />\r\n        );\r\n      }\r\n    };\r\n  };\r\n}\r\n","import React from 'react';\r\nimport { func, number } from 'prop-types';\r\n\r\nimport Card from '../Card/Card';\r\nimport Diagram from '../Diagram/Diagram';\r\n\r\nimport { addCounterOne, addCounterTwo } from '../../redux/action';\r\nimport connect from '../../redux/connect';\r\n\r\nimport imgOne from '../img/one.png';\r\nimport imgTwo from '../img/two.png';\r\n\r\nimport styles from './MainPage.module.css';\r\n\r\nconst COLORS = ['red', 'black'];\r\n\r\nconst mapStateToProps = (state) => state;\r\n\r\nconst mapDispatchToProps = (dispatch) => ({\r\n  handleOne: () => dispatch(addCounterOne()),\r\n  handleTwo: () => dispatch(addCounterTwo())\r\n});\r\n\r\nconst MainPage = ({ counterOne, counterTwo, handleOne, handleTwo }) => {\r\n  const total = counterOne + counterTwo;\r\n  const data = [\r\n    { name: 'One', value: (counterOne * 100) / (total === 0 ? 1 : total) },\r\n    { name: 'Two', value: (counterTwo * 100) / (total === 0 ? 1 : total) }\r\n  ];\r\n\r\n  return (\r\n    <div className={styles.mainPage}>\r\n      <div className={styles.wrapper}>\r\n        <Card\r\n          title={data[0].name}\r\n          url={imgOne}\r\n          counter={counterOne}\r\n          handle={handleOne}\r\n          color={COLORS[0]}\r\n        />\r\n        <Diagram data={data} COLORS={COLORS} />\r\n        <Card\r\n          title={data[1].name}\r\n          url={imgTwo}\r\n          counter={counterTwo}\r\n          handle={handleTwo}\r\n          color={COLORS[1]}\r\n        />\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nMainPage.propTypes = {\r\n  handleOne: func.isRequired,\r\n  handleTwo: func.isRequired,\r\n  counterOne: number,\r\n  counterTwo: number\r\n};\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  mapDispatchToProps\r\n)(MainPage);\r\n","import { ADD_COUNTER_ONE, ADD_COUNTER_TWO } from './type';\r\n\r\nexport const addCounterOne = () => ({ type: ADD_COUNTER_ONE });\r\nexport const addCounterTwo = () => ({ type: ADD_COUNTER_TWO });\r\n","import React from 'react';\r\nimport MainPage from './components/MainPage/MainPage';\r\n\r\nimport './App.css';\r\n\r\nfunction App() {\r\n  return (\r\n    <div className=\"App\">\r\n      <MainPage />\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nReactDOM.render(<App />, document.getElementById('root'));\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"mainPage\":\"MainPage_mainPage__EoIMC\",\"wrapper\":\"MainPage_wrapper__32Lcb\"};"],"sourceRoot":""}